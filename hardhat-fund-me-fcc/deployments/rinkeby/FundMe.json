{
  "address": "0xA25b4619Dbe153F49Dc69fCD30304cbbF7865940",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x85135ba2ff7e03907f4c5e5961de136d93eb3ef6cd594dceb223bf5506532bc6",
  "receipt": {
    "to": null,
    "from": "0xE655e13885cac3A1bF7C251f450f9f6bddB9Ab79",
    "contractAddress": "0xA25b4619Dbe153F49Dc69fCD30304cbbF7865940",
    "transactionIndex": 18,
    "gasUsed": "941876",
    "logsBloom": "0x
    "blockHash": "0xb2a0df3e81c21d0e7bc9a549068c8ce25f6beb249508667bb306678d4080f317",
    "transactionHash": "0x85135ba2ff7e03907f4c5e5961de136d93eb3ef6cd594dceb223bf5506532bc6",
    "logs": [],
    "blockNumber": 11099642,
    "cumulativeGasUsed": "2356351",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "f29f16e83414c2c91d631b9ce367aaed",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\n// need interface to work with\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//Get funds from users\\n//Withdraw funds\\n// Set a minimum funding value in USD\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 5 * 10**18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    // Constructor gets called immediately when the contract is deployed\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress); // sets priceFeed to AggregatorV3interface corresponding to priceFeedAdress\\n    }\\n\\n    function fund() public payable {\\n        // Want to be able to set a minimum funding value\\n        // How do we send ETH to this contract? Contracts can hold tokens\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough!\\\"\\n        ); //requires the amount to be greater than 1e18 (measured in Wei)\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n\\n        // What is reverting?\\n        // Undoes any action before, and send remaining gas back\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        //for loop\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array\\n        funders = new address[](0);\\n\\n        //actually withdraw the funds\\n\\n        //transfer- capped at 2300 gas, automatically reverts if gas is over limit\\n        // msg.sender is an address\\n        // payable(msg.sender) is a payable address\\n        payable(msg.sender).transfer(address(this).balance);\\n\\n        //send- capped at 2300 gas, doesn't automaticaly revert\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        require(sendSuccess, \\\"Send failed\\\");\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        } //uses less gas than require\\n        _; //this line runs tells the function to execute the original code of the function\\n    }\\n\\n    // What happens if someone sends this contract ETH without calling the fund function\\n\\n    // receive()\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    // fallback()\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x06e288b554ce73c8d8025cec0030275e541aac26c1664ee5b76fc8cd0139a40e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // ABI\\n        // Address 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        // 3000.00000000\\n        return uint256(price * 10000000000); //Typecasting signed into into a 256 bit unsigned int\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        // 3000_000000000000000000 = ETH / USD price\\n        // 1_000000000000000000 ETH\\n\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xd9a8012380e40efe408acaf03b695b11bb269c5d3888313a1d63a338d47a0740\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200112338038062001123833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c610fab62000178600039600081816102e501526106300152610fab6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610877565b6105e4565b6040516100d891906108bd565b60405180910390f35b3480156100ed57600080fd5b506100f66105fc565b60405161010391906108bd565b60405180910390f35b34801561011857600080fd5b50610121610608565b60405161012e9190610937565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661062e565b6040516101639190610961565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906109a8565b610652565b6040516101a09190610961565b60405180910390f35b674563918244f400006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069190919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610a32565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da9190610a81565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610368576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041357600080828154811061038d5761038c610ad7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040b90610b06565b91505061036b565b50600067ffffffffffffffff81111561042f5761042e610b4f565b5b60405190808252806020026020018201604052801561045d5781602001602082028036833780820191505090505b506000908051906020019061047392919061076d565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104ba573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052b90610bca565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161055a90610c1b565b60006040518083038185875af1925050503d8060008114610597576040519150601f19603f3d011682016040523d82523d6000602084013e61059c565b606091505b50509050806105e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d790610c7c565b60405180910390fd5b5050565b60016020528060005260406000206000915090505481565b674563918244f4000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061066257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061069d836106cd565b90506000670de0b6b3a764000085836106b69190610c9c565b6106c09190610d25565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561071657600080fd5b505afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e9190610de3565b5050509150506402540be400816107659190610e5e565b915050919050565b8280548282559060005260206000209081019282156107e6579160200282015b828111156107e55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061078d565b5b5090506107f391906107f7565b5090565b5b808211156108105760008160009055506001016107f8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061084482610819565b9050919050565b61085481610839565b811461085f57600080fd5b50565b6000813590506108718161084b565b92915050565b60006020828403121561088d5761088c610814565b5b600061089b84828501610862565b91505092915050565b6000819050919050565b6108b7816108a4565b82525050565b60006020820190506108d260008301846108ae565b92915050565b6000819050919050565b60006108fd6108f86108f384610819565b6108d8565b610819565b9050919050565b600061090f826108e2565b9050919050565b600061092182610904565b9050919050565b61093181610916565b82525050565b600060208201905061094c6000830184610928565b92915050565b61095b81610839565b82525050565b60006020820190506109766000830184610952565b92915050565b610985816108a4565b811461099057600080fd5b50565b6000813590506109a28161097c565b92915050565b6000602082840312156109be576109bd610814565b5b60006109cc84828501610993565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610a1c6013836109d5565b9150610a27826109e6565b602082019050919050565b60006020820190508181036000830152610a4b81610a0f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8c826108a4565b9150610a97836108a4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610acc57610acb610a52565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b11826108a4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b4457610b43610a52565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bb4600b836109d5565b9150610bbf82610b7e565b602082019050919050565b60006020820190508181036000830152610be381610ba7565b9050919050565b600081905092915050565b50565b6000610c05600083610bea565b9150610c1082610bf5565b600082019050919050565b6000610c2682610bf8565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610c66600b836109d5565b9150610c7182610c30565b602082019050919050565b60006020820190508181036000830152610c9581610c59565b9050919050565b6000610ca7826108a4565b9150610cb2836108a4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ceb57610cea610a52565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d30826108a4565b9150610d3b836108a4565b925082610d4b57610d4a610cf6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d7581610d56565b8114610d8057600080fd5b50565b600081519050610d9281610d6c565b92915050565b6000819050919050565b610dab81610d98565b8114610db657600080fd5b50565b600081519050610dc881610da2565b92915050565b600081519050610ddd8161097c565b92915050565b600080600080600060a08688031215610dff57610dfe610814565b5b6000610e0d88828901610d83565b9550506020610e1e88828901610db9565b9450506040610e2f88828901610dce565b9350506060610e4088828901610dce565b9250506080610e5188828901610d83565b9150509295509295909350565b6000610e6982610d98565b9150610e7483610d98565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610eb357610eb2610a52565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ef057610eef610a52565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f2d57610f2c610a52565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f6a57610f69610a52565b5b82820290509291505056fea2646970667358221220cddb2a2dfc4392b5d8e051e800c2bc2f2185819174f706090b5402d54ec1b4c964736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610877565b6105e4565b6040516100d891906108bd565b60405180910390f35b3480156100ed57600080fd5b506100f66105fc565b60405161010391906108bd565b60405180910390f35b34801561011857600080fd5b50610121610608565b60405161012e9190610937565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661062e565b6040516101639190610961565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906109a8565b610652565b6040516101a09190610961565b60405180910390f35b674563918244f400006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069190919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610a32565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102da9190610a81565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610368576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041357600080828154811061038d5761038c610ad7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040b90610b06565b91505061036b565b50600067ffffffffffffffff81111561042f5761042e610b4f565b5b60405190808252806020026020018201604052801561045d5781602001602082028036833780820191505090505b506000908051906020019061047392919061076d565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104ba573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052b90610bca565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161055a90610c1b565b60006040518083038185875af1925050503d8060008114610597576040519150601f19603f3d011682016040523d82523d6000602084013e61059c565b606091505b50509050806105e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d790610c7c565b60405180910390fd5b5050565b60016020528060005260406000206000915090505481565b674563918244f4000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061066257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061069d836106cd565b90506000670de0b6b3a764000085836106b69190610c9c565b6106c09190610d25565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561071657600080fd5b505afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e9190610de3565b5050509150506402540be400816107659190610e5e565b915050919050565b8280548282559060005260206000209081019282156107e6579160200282015b828111156107e55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061078d565b5b5090506107f391906107f7565b5090565b5b808211156108105760008160009055506001016107f8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061084482610819565b9050919050565b61085481610839565b811461085f57600080fd5b50565b6000813590506108718161084b565b92915050565b60006020828403121561088d5761088c610814565b5b600061089b84828501610862565b91505092915050565b6000819050919050565b6108b7816108a4565b82525050565b60006020820190506108d260008301846108ae565b92915050565b6000819050919050565b60006108fd6108f86108f384610819565b6108d8565b610819565b9050919050565b600061090f826108e2565b9050919050565b600061092182610904565b9050919050565b61093181610916565b82525050565b600060208201905061094c6000830184610928565b92915050565b61095b81610839565b82525050565b60006020820190506109766000830184610952565b92915050565b610985816108a4565b811461099057600080fd5b50565b6000813590506109a28161097c565b92915050565b6000602082840312156109be576109bd610814565b5b60006109cc84828501610993565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610a1c6013836109d5565b9150610a27826109e6565b602082019050919050565b60006020820190508181036000830152610a4b81610a0f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a8c826108a4565b9150610a97836108a4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610acc57610acb610a52565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b11826108a4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b4457610b43610a52565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bb4600b836109d5565b9150610bbf82610b7e565b602082019050919050565b60006020820190508181036000830152610be381610ba7565b9050919050565b600081905092915050565b50565b6000610c05600083610bea565b9150610c1082610bf5565b600082019050919050565b6000610c2682610bf8565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610c66600b836109d5565b9150610c7182610c30565b602082019050919050565b60006020820190508181036000830152610c9581610c59565b9050919050565b6000610ca7826108a4565b9150610cb2836108a4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ceb57610cea610a52565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d30826108a4565b9150610d3b836108a4565b925082610d4b57610d4a610cf6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d7581610d56565b8114610d8057600080fd5b50565b600081519050610d9281610d6c565b92915050565b6000819050919050565b610dab81610d98565b8114610db657600080fd5b50565b600081519050610dc881610da2565b92915050565b600081519050610ddd8161097c565b92915050565b600080600080600060a08688031215610dff57610dfe610814565b5b6000610e0d88828901610d83565b9550506020610e1e88828901610db9565b9450506040610e2f88828901610dce565b9350506060610e4088828901610dce565b9250506080610e5188828901610d83565b9150509295509295909350565b6000610e6982610d98565b9150610e7483610d98565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610eb357610eb2610a52565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ef057610eef610a52565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f2d57610f2c610a52565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f6a57610f69610a52565b5b82820290509291505056fea2646970667358221220cddb2a2dfc4392b5d8e051e800c2bc2f2185819174f706090b5402d54ec1b4c964736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}